{"version":3,"sources":["base/_buttons.scss","style.css","bourbon/addons/_prefixer.scss","base/_variables.scss","bourbon/addons/_font-stacks.scss","base/_forms.scss","base/_lists.scss","bourbon/css3/_font-feature-settings.scss","base/_tables.scss","base/_typography.scss","bourbon/css3/_flex-box.scss","cards.sass","bourbon/css3/_transition.scss","navigation.sass","neat/grid/_outer-container.scss","bourbon/addons/_clearfix.scss","neat/grid/_media.scss","bourbon/addons/_position.scss","bourbon/_bourbon-deprecated-upcoming.scss","flex-boxes.sass","bourbon/addons/_size.scss","neat/grid/_span-columns.scss","layout.sass","neat/settings/_grid.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["#{$all-button-inputs},\nbutton {\n  @include appearance(none);\n  -webkit-font-smoothing: antialiased;\n  background-color: $action-color;\n  border-radius: $base-border-radius;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  font-weight: 600;\n  line-height: 1;\n  padding: 0.75em 1em;\n  text-decoration: none;\n  user-select: none;\n  vertical-align: middle;\n  white-space: nowrap;\n\n  &:hover,\n  &:focus {\n    background-color: darken($action-color, 15%);\n    color: #fff;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n}\n",null,"@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","// Typography\n$base-font-family: $helvetica;\n$heading-font-family: $base-font-family;\n\n// Font Sizes\n$base-font-size: 1em;\n\n// Line height\n$base-line-height: 1.5;\n$heading-line-height: 1.2;\n\n// Other Sizes\n$base-border-radius: 3px;\n$base-spacing: $base-line-height * 1em;\n$small-spacing: $base-spacing / 2;\n$base-z-index: 0;\n\n// Colors\n$blue: #477dca;\n$dark-gray: #333;\n$medium-gray: #999;\n$light-gray: #ddd;\n\n// Font Colors\n$base-background-color: #fff;\n$base-font-color: $dark-gray;\n$action-color: $blue;\n\n// Border\n$base-border-color: $light-gray;\n$base-border: 1px solid $base-border-color;\n\n// Forms\n$form-box-shadow: inset 0 1px 3px rgba(#000, 0.06);\n$form-box-shadow-focus: $form-box-shadow, 0 0 5px adjust-color($action-color, $lightness: -5%, $alpha: -0.3);\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","fieldset {\n  background-color: lighten($base-border-color, 10%);\n  border: $base-border;\n  margin: 0 0 $small-spacing;\n  padding: $base-spacing;\n}\n\ninput,\nlabel,\nselect {\n  display: block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n}\n\nlabel {\n  font-weight: 600;\n  margin-bottom: $small-spacing / 2;\n\n  &.required::after {\n    content: \"*\";\n  }\n\n  abbr {\n    display: none;\n  }\n}\n\n#{$all-text-inputs},\nselect[multiple=multiple],\ntextarea {\n  background-color: $base-background-color;\n  border: $base-border;\n  border-radius: $base-border-radius;\n  box-shadow: $form-box-shadow;\n  box-sizing: border-box;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  margin-bottom: $base-spacing / 2;\n  padding: $base-spacing / 3;\n  transition: border-color;\n  width: 100%;\n\n  &:hover {\n    border-color: darken($base-border-color, 10%);\n  }\n\n  &:focus {\n    border-color: $action-color;\n    box-shadow: $form-box-shadow-focus;\n    outline: none;\n  }\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput[type=\"search\"] {\n  @include appearance(none);\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  display: inline;\n  margin-right: $small-spacing / 2;\n}\n\ninput[type=\"file\"] {\n  padding-bottom: $small-spacing;\n  width: 100%;\n}\n\nselect {\n  margin-bottom: $base-spacing;\n  max-width: 100%;\n  width: auto;\n}\n","ul,\nol {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  &%default-ul {\n    list-style-type: disc;\n    margin-bottom: $small-spacing;\n    padding-left: $base-spacing;\n  }\n\n  &%default-ol {\n    list-style-type: decimal;\n    margin-bottom: $small-spacing;\n    padding-left: $base-spacing;\n  }\n}\n\ndl {\n  margin-bottom: $small-spacing;\n\n  dt {\n    font-weight: bold;\n    margin-top: $small-spacing;\n  }\n\n  dd {\n    margin: 0;\n  }\n}\n","@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n","table {\n  @include font-feature-settings(\"kern\", \"liga\", \"tnum\");\n  border-collapse: collapse;\n  margin: $small-spacing 0;\n  table-layout: fixed;\n  width: 100%;\n}\n\nth {\n  border-bottom: 1px solid darken($base-border-color, 15%);\n  font-weight: 600;\n  padding: $small-spacing 0;\n  text-align: left;\n}\n\ntd {\n  border-bottom: $base-border;\n  padding: $small-spacing 0;\n}\n\ntr,\ntd,\nth {\n  vertical-align: middle;\n}\n","body {\n  @include font-feature-settings(\"kern\", \"liga\", \"pnum\");\n  -webkit-font-smoothing: antialiased;\n  color: $base-font-color;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  line-height: $base-line-height;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: $heading-font-family;\n  font-size: $base-font-size;\n  line-height: $heading-line-height;\n  margin: 0 0 $small-spacing;\n}\n\np {\n  margin: 0 0 $small-spacing;\n}\n\na {\n  color: $action-color;\n  text-decoration: none;\n  transition: color 0.1s linear;\n\n  &:active,\n  &:focus,\n  &:hover {\n    color: darken($action-color, 15%);\n  }\n\n  &:active,\n  &:focus {\n    outline: none;\n  }\n}\n\nhr {\n  border-bottom: $base-border;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  margin: $base-spacing 0;\n}\n\nimg,\npicture {\n  margin: 0;\n  max-width: 100%;\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n",".cards\n  @include display(flex)\n  @include flex-wrap(wrap)\n  @include justify-content(space-between)\n\n\n.card\n  $base-border-color: gainsboro !default\n  $base-border-radius: 3px !default\n  $base-background-color: white !default\n  $base-spacing: 1.5em !default\n  $action-color: #477DCA !default\n  $base-link-color: $action-color !default\n  $dark-gray: #333 !default\n  $base-font-color: $dark-gray !default\n  $card-border-color: $base-border-color\n  $card-border: 1px solid $card-border-color\n  $card-background: lighten($card-border-color, 10%)\n  $card-header-background: $card-background\n  $card-hover-background: lighten($card-background, 5%)\n  $card-image-background: #DBD199\n  $card-image-hover-background: lighten($card-image-background, 5%)\n  $card-margin: 1em\n\n  @include flex-basis(15em)\n  @include flex-grow(1)\n  @include transition (all 0.2s ease-in-out)\n  background-color: $card-background\n  border-radius: $base-border-radius\n  border: $card-border\n  box-shadow: 0 2px 4px darken($base-background-color, 10%)\n  cursor: pointer\n  margin: 0 $card-margin $base-spacing $card-margin\n  position: relative\n\n  .card-image\n    overflow: hidden\n    max-height: 150px\n\n    img\n      @include transition (all 0.2s ease-in-out)\n      background: $card-image-background\n      border-top-left-radius: $base-border-radius\n      border-top-right-radius: $base-border-radius\n      width: 100%\n\n\n\n  .card-header\n    @include transition (all 0.2s ease-in-out)\n    background-color: $card-header-background\n    border-bottom: $card-border\n    border-radius: $base-border-radius $base-border-radius 0 0\n    font-weight: bold\n    line-height: 1.5em\n    padding: ($base-spacing / 3) ($base-spacing / 2)\n\n\n  .card-copy\n    font-size: 0.9em\n    line-height: 1.5em\n    padding: ($base-spacing / 2) ($base-spacing / 2)\n\n    p\n      margin: 0 0 ($base-spacing / 2)\n\n\n\n  &:focus,\n  &:hover\n    background-color: $card-hover-background\n\n    .card-image img\n      background: $card-image-hover-background\n\n\n    .card-header\n      background-color: $card-hover-background\n\n\n\n  &:active\n    background-color: $card-background\n\n    .card-header\n      background-color: $card-background\n\n\n\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","header.navigation \n  $base-border-color: gainsboro !default\n  $base-border-radius: 3px !default\n  $action-color: #477DCA !default\n  $dark-gray: #333 !default\n  $large-screen: em(860) !default\n  $navigation-padding: 1em\n  $navigation-background: $dark-gray\n  $navigation-color: transparentize(white, 0.3)\n  $navigation-color-hover: white\n  $navigation-height: 60px\n  $navigation-nav-button-background: $action-color\n  $navigation-nav-button-background-hover: lighten($navigation-background, 10%)\n  $navigation-nav-button-border: 1px solid lighten($navigation-nav-button-background, 20%)\n  $navigation-search-background: lighten($navigation-background, 5)\n  $navigation-search-border: 1px solid darken($navigation-background, 5)\n  $navigation-active-link-color: transparentize(white, 0.5)\n  $navigation-submenu-padding: 1em\n  $navigation-submenu-width: 12em\n  $horizontal-bar-mode: $large-screen\n\n  background-color: $navigation-background\n  border-bottom: 1px solid darken($navigation-background, 10)\n  min-height: $navigation-height\n  width: 100%\n  z-index: 999\n\n  .navigation-wrapper \n    @include clearfix\n    @include outer-container\n    position: relative\n    z-index: 9999\n\n\n  .logo \n    float: left\n    max-height: $navigation-height\n    padding-left: $navigation-padding\n    padding-right: 2em\n\n    img \n      max-height: $navigation-height\n      padding: 0.8em 0\n  \n\n\n  // Mobile view\n\n  .navigation-menu-button \n    color: $navigation-color\n    display: block\n    float: right\n    font-weight: 700\n    line-height: $navigation-height\n    margin: 0\n    padding-right: 1em\n    text-transform: uppercase\n\n    @include media ($horizontal-bar-mode) \n      display: none\n  \n\n    &:focus,\n    &:hover \n      color: $navigation-color-hover\n  \n\n\n  // Nav menu\n\n  nav \n    float: none\n    min-height: $navigation-height\n    z-index: 9999999\n\n    @include media ($horizontal-bar-mode) \n      float: right\n  \n\n\n  ul.navigation-menu \n    -webkit-transform-style: preserve-3d // stop webkit flicker\n    clear: both\n    display: none\n    margin: 0 auto\n    overflow: visible\n    padding: 0\n    width: 100%\n    z-index: 9999\n\n    &.show \n      display: block\n  \n\n    @include media ($horizontal-bar-mode) \n      display: inline\n      margin: 0\n      padding: 0\n  \n\n\n  // The nav items\n\n  ul li.nav-link \n    background: $navigation-background\n    display: block\n    line-height: $navigation-height\n    overflow: hidden\n    padding-right: 0.8em\n    text-align: right\n    width: 100%\n    z-index: 9999\n\n    @include media ($horizontal-bar-mode) \n      background: transparent\n      display: inline\n      line-height: $navigation-height\n      text-decoration: none\n      width: auto\n  \n\n    a \n      color: $navigation-color\n      display: inline-block\n      font-weight: 400\n      text-decoration: none\n\n      @include media ($horizontal-bar-mode) \n        padding-right: 1em\n    \n\n      &:focus,\n      &:hover \n        color: $navigation-color-hover\n    \n  \n\n\n  .active-nav-item a \n    border-bottom: 1px solid $navigation-active-link-color\n    padding-bottom: 3px\n\n\n  // Sub menus\n\n  li.more.nav-link \n    padding-right: 0\n\n    @include media($large-screen) \n      padding-right: $navigation-submenu-padding\n  \n\n    > ul > li:first-child a  \n      padding-top: 1em\n  \n\n    a \n      margin-right: $navigation-submenu-padding\n  \n\n    > a \n      padding-right: 0.6em\n  \n\n    > a:after \n      @include position(absolute, auto -0.4em auto auto)\n      content: '\\25BE'\n      color: $navigation-color\n  \n\n\n  li.more \n    overflow: visible\n    padding-right: 0\n\n    a \n      padding-right: 0.8em\n  \n\n    > a \n      padding-right: 1.6em\n      position: relative\n\n      @include media($large-screen) \n        margin-right: $navigation-submenu-padding\n    \n\n      &:after \n        content: '›'\n        font-size: 1.2em\n        position: absolute\n        right: $navigation-submenu-padding / 2\n    \n  \n\n    &:focus > .submenu,\n    &:hover > .submenu \n      display: block\n  \n\n    @include media($horizontal-bar-mode) \n      padding-right: 0.8em\n      position: relative\n  \n\n\n  ul.submenu \n    display: none\n    padding-left: 0\n\n    @include media($horizontal-bar-mode) \n      left: -$navigation-submenu-padding\n      position: absolute\n      top: 1.5em\n  \n\n    .submenu \n      @include media($horizontal-bar-mode) \n        left: $navigation-submenu-width - 0.2em\n        top: 0\n    \n  \n\n    li \n      display: block\n      padding-right: 0\n\n      @include media($horizontal-bar-mode) \n        line-height: $navigation-height / 1.3\n\n        &:first-child > a \n          border-top-left-radius: $base-border-radius\n          border-top-right-radius: $base-border-radius\n      \n\n        &:last-child > a \n          border-bottom-left-radius: $base-border-radius\n          border-bottom-right-radius: $base-border-radius\n          padding-bottom: 0.7em\n      \n    \n\n      a \n        background-color: darken($navigation-background, 3%)\n        display: inline-block\n        text-align: right\n        width: 100%\n\n        @include media($horizontal-bar-mode) \n          background-color: $navigation-background\n          padding-left: $navigation-submenu-padding\n          text-align: left\n          width: $navigation-submenu-width\n      \n    \n  \n\n\n  // Elements on the far right\n\n  .navigation-tools \n    background: #505050\n    clear: both\n    display: block\n    height: $navigation-height\n    padding-left: $navigation-padding / 2\n    padding-right: $navigation-padding\n\n    @include media($large-screen) \n      background: transparent\n      clear: none\n      float: right\n  \n\n\n  .sign-up \n    @include button(flat, $action-color)\n    display: inline\n    float: right\n    font-size: 0.8em\n    margin-top: 1em\n    padding: 0.75em 1em\n    text-transform: uppercase\n\n\n  // Search bar\n\n  .search-bar \n    $search-bar-border-color: $base-border-color\n    $search-bar-border: 1px solid $search-bar-border-color\n    $search-bar-background: lighten($search-bar-border-color, 10%)\n\n    float: left\n    padding: 0.85em 0.6em 0.7em 0.6em\n    width: 60%\n\n    form \n      position: relative\n\n      input[type=search] \n        @include box-sizing(border-box)\n        background: $navigation-search-background\n        border-radius: $base-border-radius * 2\n        border: $navigation-search-border\n        color: $navigation-color\n        font-size: 0.9em\n        font-style: italic\n        margin: 0\n        padding: 0.5em 0.8em\n        width: 100%\n\n        @include media($large-screen) \n          width: 100%\n      \n    \n\n      button[type=submit] \n        @include button(flat, $navigation-search-background)\n        bottom: 0.3em\n        left: auto\n        outline: none\n        padding: 0 9px\n        position: absolute\n        right: 0.3em\n        top: 0.3em\n\n        img \n          height: 12px\n          opacity: 0.7\n          padding: 1px\n      \n    \n  \n\n    @include media($horizontal-bar-mode) \n      display: inline-block\n      position: relative\n      width: 16em\n\n      input \n        @include box-sizing(border-box)\n        display: block\n    \n  \n\n\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  } @else {\n    $loop-to: length($query);\n    $media-query: \"screen and \";\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if is-not(is-even(length($query))) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + \"(\" + nth($query, $i) + \": \" + nth($query, $i + 1) + \") \";\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + \"and \";\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n",".flex-boxes \n  $base-border-radius: 3px !default\n  $base-background-color: white !default\n  $dark-gray: #333 !default\n  $light-gray: #DDD !default\n  $base-font-color: $dark-gray !default\n  $flex-box-border-color: $light-gray\n  $flex-box-border: 1px solid $flex-box-border-color\n  $flex-box-background: lighten($light-gray, 10%)\n  $flex-box-gutter: 0.4em\n  $flex-box-width: 18em\n  $flex-box-color: transparentize($base-font-color, 0.3)\n  $flex-box-top-colors: tomato,#72BFBF,#92B1E3,#E3D743,#CCC,#F6C05C\n\n  @include clearfix\n  @include display(flex)\n  @include justify-content(center)\n  @include align-items(stretch)\n  @include flex-wrap(wrap)\n  clear: both\n  text-align: center\n\n  .flex-box \n    @include transition (all 0.2s ease-in-out)\n    @include flex(2 2 15em)\n    @include align-self(stretch)\n    background: $flex-box-background\n    border-radius: $base-border-radius\n    box-shadow: inset 0 0 1px $flex-box-border-color, 0 2px 4px darken($base-background-color, 10%)\n    display: block\n    margin: $flex-box-gutter\n    padding: 2em 2em 3em 2em\n    text-decoration: none\n\n    @for $i from 1 to 7\n      &:nth-child(#{$i})\n        $color-from-list: nth($flex-box-top-colors, $i)\n        border-top: 6px solid $color-from-list\n\n        &:focus,\n        &:hover \n          background-color: transparentize($color-from-list, 0.9)\n        \n      \n  \n\n    img \n      display: block\n      height: 3em\n      margin-bottom: 2em\n      margin: auto\n      opacity: 0.4\n  \n\n    .flex-title \n      color: $flex-box-color\n      font-size: 1.2em\n      font-weight: 800\n      margin-bottom: 0.5em\n  \n\n    p \n      color: transparentize($flex-box-color, 0.1)\n      line-height: 1.5em\n      margin: auto\n  \n\n\n  .flex-box-big \n    @include flex(1 1 40em)\n\n\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","\n.row\n  +row\n\n.container\n  +outer-container\n\n.footer\n  +clearfix\n\n.box\n  margin-top: 5px\n  +size(inherit)\n  +span-columns(3)\n\n\n.boxes\n  border-top: 1px solid #000000\n  margin-top: 10px\n  +clearfix\n  +outer-container\n\n.box-span6\n    margin-top: 5px\n    +size(inherit)\n    +span-columns(6)\n\n.box-span2\n    margin-top: 5px\n    +size(inherit)\n    +span-columns(2)\n\n.box-span3\n    margin-top: 5px\n    +size(inherit)\n    +span-columns(3)\n\n.box-span4\n    margin-top: 5px\n    +size(inherit)\n    +span-columns(4)","@charset \"UTF-8\";\n\n/// Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. To learn more about modular-scale() see [Bourbon docs](http://bourbon.io/docs/#modular-scale). Set with a `!global` flag.\n///\n/// @type Number (Unit)\n\n$column: modular-scale(3, 1em, $golden) !default;\n\n/// Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. To learn more about modular-scale() see [Bourbon docs](http://bourbon.io/docs/#modular-scale). Set with the `!global` flag.\n///\n/// @type Number (Unit)\n\n$gutter: modular-scale(1, 1em, $golden) !default;\n\n/// Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.\n///\n/// @type Number (Unitless)\n\n$grid-columns: 12 !default;\n\n/// Sets the max-width property of the element that includes `outer-container()`. To learn more about `em()` see [Bourbon docs](http://bourbon.io/docs/#px-to-em). Set with the `!global` flag.\n///\n/// @type Number (Unit)\n///\n$max-width: em(1088) !default;\n\n/// When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.\n///\n/// @type Bool\n///\n/// @example css - CSS Output\n///   html {\n///     box-sizing: border-box; }\n///\n///   *, *::after, *::before {\n///     box-sizing: inherit;\n///   }\n\n$border-box-sizing: true !default;\n\n/// Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.\n///\n/// @type String\n\n$default-feature: min-width; // Default @media feature for the breakpoint() mixin\n\n///Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.\n///\n///@type String\n\n$default-layout-direction: LTR !default;\n"],"sourceRoot":"/source/"}